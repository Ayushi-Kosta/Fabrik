{"ast":null,"code":"import { BufferGeometry, Color, Float32BufferAttribute, Vector2, Vector3 } from '../../../build/three.module.js';\n/**\n * Break faces with edges longer than maxEdgeLength\n */\n\nvar TessellateModifier = function TessellateModifier() {\n  var maxEdgeLength = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.1;\n  var maxIterations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n  this.maxEdgeLength = maxEdgeLength;\n  this.maxIterations = maxIterations;\n};\n\nTessellateModifier.prototype.modify = function (geometry) {\n  if (geometry.isGeometry === true) {\n    console.error('THREE.TessellateModifier no longer supports Geometry. Use BufferGeometry instead.');\n    return geometry;\n  }\n\n  if (geometry.index !== null) {\n    geometry = geometry.toNonIndexed();\n  } //\n\n\n  var maxIterations = this.maxIterations;\n  var maxEdgeLengthSquared = this.maxEdgeLength * this.maxEdgeLength;\n  var va = new Vector3();\n  var vb = new Vector3();\n  var vc = new Vector3();\n  var vm = new Vector3();\n  var vs = [va, vb, vc, vm];\n  var na = new Vector3();\n  var nb = new Vector3();\n  var nc = new Vector3();\n  var nm = new Vector3();\n  var ns = [na, nb, nc, nm];\n  var ca = new Color();\n  var cb = new Color();\n  var cc = new Color();\n  var cm = new Color();\n  var cs = [ca, cb, cc, cm];\n  var ua = new Vector2();\n  var ub = new Vector2();\n  var uc = new Vector2();\n  var um = new Vector2();\n  var us = [ua, ub, uc, um];\n  var u2a = new Vector2();\n  var u2b = new Vector2();\n  var u2c = new Vector2();\n  var u2m = new Vector2();\n  var u2s = [u2a, u2b, u2c, u2m];\n  var attributes = geometry.attributes;\n  var hasNormals = attributes.normal !== undefined;\n  var hasColors = attributes.color !== undefined;\n  var hasUVs = attributes.uv !== undefined;\n  var hasUV2s = attributes.uv2 !== undefined;\n  var positions = attributes.position.array;\n  var normals = hasNormals ? attributes.normal.array : null;\n  var colors = hasColors ? attributes.color.array : null;\n  var uvs = hasUVs ? attributes.uv.array : null;\n  var uv2s = hasUV2s ? attributes.uv2.array : null;\n  var positions2 = positions;\n  var normals2 = normals;\n  var colors2 = colors;\n  var uvs2 = uvs;\n  var uv2s2 = uv2s;\n  var iteration = 0;\n  var tessellating = true;\n\n  function addTriangle(a, b, c) {\n    var v1 = vs[a];\n    var v2 = vs[b];\n    var v3 = vs[c];\n    positions2.push(v1.x, v1.y, v1.z);\n    positions2.push(v2.x, v2.y, v2.z);\n    positions2.push(v3.x, v3.y, v3.z);\n\n    if (hasNormals) {\n      var n1 = ns[a];\n      var n2 = ns[b];\n      var n3 = ns[c];\n      normals2.push(n1.x, n1.y, n1.z);\n      normals2.push(n2.x, n2.y, n2.z);\n      normals2.push(n3.x, n3.y, n3.z);\n    }\n\n    if (hasColors) {\n      var c1 = cs[a];\n      var c2 = cs[b];\n      var c3 = cs[c];\n      colors2.push(c1.x, c1.y, c1.z);\n      colors2.push(c2.x, c2.y, c2.z);\n      colors2.push(c3.x, c3.y, c3.z);\n    }\n\n    if (hasUVs) {\n      var u1 = us[a];\n      var u2 = us[b];\n      var u3 = us[c];\n      uvs2.push(u1.x, u1.y);\n      uvs2.push(u2.x, u2.y);\n      uvs2.push(u3.x, u3.y);\n    }\n\n    if (hasUV2s) {\n      var u21 = u2s[a];\n      var u22 = u2s[b];\n      var u23 = u2s[c];\n      uv2s2.push(u21.x, u21.y);\n      uv2s2.push(u22.x, u22.y);\n      uv2s2.push(u23.x, u23.y);\n    }\n  }\n\n  while (tessellating && iteration < maxIterations) {\n    iteration++;\n    tessellating = false;\n    positions = positions2;\n    positions2 = [];\n\n    if (hasNormals) {\n      normals = normals2;\n      normals2 = [];\n    }\n\n    if (hasColors) {\n      colors = colors2;\n      colors2 = [];\n    }\n\n    if (hasUVs) {\n      uvs = uvs2;\n      uvs2 = [];\n    }\n\n    if (hasUV2s) {\n      uv2s = uv2s2;\n      uv2s2 = [];\n    }\n\n    for (var i = 0, i2 = 0, il = positions.length; i < il; i += 9, i2 += 6) {\n      va.fromArray(positions, i + 0);\n      vb.fromArray(positions, i + 3);\n      vc.fromArray(positions, i + 6);\n\n      if (hasNormals) {\n        na.fromArray(normals, i + 0);\n        nb.fromArray(normals, i + 3);\n        nc.fromArray(normals, i + 6);\n      }\n\n      if (hasColors) {\n        ca.fromArray(colors, i + 0);\n        cb.fromArray(colors, i + 3);\n        cc.fromArray(colors, i + 6);\n      }\n\n      if (hasUVs) {\n        ua.fromArray(uvs, i2 + 0);\n        ub.fromArray(uvs, i2 + 2);\n        uc.fromArray(uvs, i2 + 4);\n      }\n\n      if (hasUV2s) {\n        u2a.fromArray(uv2s, i2 + 0);\n        u2b.fromArray(uv2s, i2 + 2);\n        u2c.fromArray(uv2s, i2 + 4);\n      }\n\n      var dab = va.distanceToSquared(vb);\n      var dbc = vb.distanceToSquared(vc);\n      var dac = va.distanceToSquared(vc);\n\n      if (dab > maxEdgeLengthSquared || dbc > maxEdgeLengthSquared || dac > maxEdgeLengthSquared) {\n        tessellating = true;\n\n        if (dab >= dbc && dab >= dac) {\n          vm.lerpVectors(va, vb, 0.5);\n          if (hasNormals) nm.lerpVectors(na, nb, 0.5);\n          if (hasColors) cm.lerpColors(ca, cb, 0.5);\n          if (hasUVs) um.lerpVectors(ua, ub, 0.5);\n          if (hasUV2s) u2m.lerpVectors(u2a, u2b, 0.5);\n          addTriangle(0, 3, 2);\n          addTriangle(3, 1, 2);\n        } else if (dbc >= dab && dbc >= dac) {\n          vm.lerpVectors(vb, vc, 0.5);\n          if (hasNormals) nm.lerpVectors(nb, nc, 0.5);\n          if (hasColors) cm.lerpColors(cb, cc, 0.5);\n          if (hasUVs) um.lerpVectors(ub, uc, 0.5);\n          if (hasUV2s) u2m.lerpVectors(u2b, u2c, 0.5);\n          addTriangle(0, 1, 3);\n          addTriangle(3, 2, 0);\n        } else {\n          vm.lerpVectors(va, vc, 0.5);\n          if (hasNormals) nm.lerpVectors(na, nc, 0.5);\n          if (hasColors) cm.lerpColors(ca, cc, 0.5);\n          if (hasUVs) um.lerpVectors(ua, uc, 0.5);\n          if (hasUV2s) u2m.lerpVectors(u2a, u2c, 0.5);\n          addTriangle(0, 1, 3);\n          addTriangle(3, 1, 2);\n        }\n      } else {\n        addTriangle(0, 1, 2);\n      }\n    }\n  }\n\n  var geometry2 = new BufferGeometry();\n  geometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\n\n  if (hasNormals) {\n    geometry2.setAttribute('normal', new Float32BufferAttribute(normals2, 3));\n  }\n\n  if (hasColors) {\n    geometry2.setAttribute('color', new Float32BufferAttribute(colors2, 3));\n  }\n\n  if (hasUVs) {\n    geometry2.setAttribute('uv', new Float32BufferAttribute(uvs2, 2));\n  }\n\n  if (hasUV2s) {\n    geometry2.setAttribute('uv2', new Float32BufferAttribute(uv2s2, 2));\n  }\n\n  return geometry2;\n};\n\nexport { TessellateModifier };","map":{"version":3,"names":["BufferGeometry","Color","Float32BufferAttribute","Vector2","Vector3","TessellateModifier","maxEdgeLength","maxIterations","prototype","modify","geometry","isGeometry","console","error","index","toNonIndexed","maxEdgeLengthSquared","va","vb","vc","vm","vs","na","nb","nc","nm","ns","ca","cb","cc","cm","cs","ua","ub","uc","um","us","u2a","u2b","u2c","u2m","u2s","attributes","hasNormals","normal","undefined","hasColors","color","hasUVs","uv","hasUV2s","uv2","positions","position","array","normals","colors","uvs","uv2s","positions2","normals2","colors2","uvs2","uv2s2","iteration","tessellating","addTriangle","a","b","c","v1","v2","v3","push","x","y","z","n1","n2","n3","c1","c2","c3","u1","u2","u3","u21","u22","u23","i","i2","il","length","fromArray","dab","distanceToSquared","dbc","dac","lerpVectors","lerpColors","geometry2","setAttribute"],"sources":["C:/Users/User/OneDrive/Desktop/lwmpi_new_main/node_modules/three/examples/jsm/modifiers/TessellateModifier.js"],"sourcesContent":["import {\n\tBufferGeometry,\n\tColor,\n\tFloat32BufferAttribute,\n\tVector2,\n\tVector3\n} from '../../../build/three.module.js';\n\n/**\n * Break faces with edges longer than maxEdgeLength\n */\n\nvar TessellateModifier = function ( maxEdgeLength = 0.1, maxIterations = 6 ) {\n\n\tthis.maxEdgeLength = maxEdgeLength;\n\tthis.maxIterations = maxIterations;\n\n};\n\nTessellateModifier.prototype.modify = function ( geometry ) {\n\n\tif ( geometry.isGeometry === true ) {\n\n\t\tconsole.error( 'THREE.TessellateModifier no longer supports Geometry. Use BufferGeometry instead.' );\n\t\treturn geometry;\n\n\t}\n\n\tif ( geometry.index !== null ) {\n\n\t\tgeometry = geometry.toNonIndexed();\n\n\t}\n\n\t//\n\n\tconst maxIterations = this.maxIterations;\n\tconst maxEdgeLengthSquared = this.maxEdgeLength * this.maxEdgeLength;\n\n\tconst va = new Vector3();\n\tconst vb = new Vector3();\n\tconst vc = new Vector3();\n\tconst vm = new Vector3();\n\tconst vs = [ va, vb, vc, vm ];\n\n\tconst na = new Vector3();\n\tconst nb = new Vector3();\n\tconst nc = new Vector3();\n\tconst nm = new Vector3();\n\tconst ns = [ na, nb, nc, nm ];\n\n\tconst ca = new Color();\n\tconst cb = new Color();\n\tconst cc = new Color();\n\tconst cm = new Color();\n\tconst cs = [ ca, cb, cc, cm ];\n\n\tconst ua = new Vector2();\n\tconst ub = new Vector2();\n\tconst uc = new Vector2();\n\tconst um = new Vector2();\n\tconst us = [ ua, ub, uc, um ];\n\n\tconst u2a = new Vector2();\n\tconst u2b = new Vector2();\n\tconst u2c = new Vector2();\n\tconst u2m = new Vector2();\n\tconst u2s = [ u2a, u2b, u2c, u2m ];\n\n\tconst attributes = geometry.attributes;\n\tconst hasNormals = attributes.normal !== undefined;\n\tconst hasColors = attributes.color !== undefined;\n\tconst hasUVs = attributes.uv !== undefined;\n\tconst hasUV2s = attributes.uv2 !== undefined;\n\n\tlet positions = attributes.position.array;\n\tlet normals = hasNormals ? attributes.normal.array : null;\n\tlet colors = hasColors ? attributes.color.array : null;\n\tlet uvs = hasUVs ? attributes.uv.array : null;\n\tlet uv2s = hasUV2s ? attributes.uv2.array : null;\n\n\tlet positions2 = positions;\n\tlet normals2 = normals;\n\tlet colors2 = colors;\n\tlet uvs2 = uvs;\n\tlet uv2s2 = uv2s;\n\n\tlet iteration = 0;\n\tlet tessellating = true;\n\n\tfunction addTriangle( a, b, c ) {\n\n\t\tconst v1 = vs[ a ];\n\t\tconst v2 = vs[ b ];\n\t\tconst v3 = vs[ c ];\n\n\t\tpositions2.push( v1.x, v1.y, v1.z );\n\t\tpositions2.push( v2.x, v2.y, v2.z );\n\t\tpositions2.push( v3.x, v3.y, v3.z );\n\n\t\tif ( hasNormals ) {\n\n\t\t\tconst n1 = ns[ a ];\n\t\t\tconst n2 = ns[ b ];\n\t\t\tconst n3 = ns[ c ];\n\n\t\t\tnormals2.push( n1.x, n1.y, n1.z );\n\t\t\tnormals2.push( n2.x, n2.y, n2.z );\n\t\t\tnormals2.push( n3.x, n3.y, n3.z );\n\n\t\t}\n\n\t\tif ( hasColors ) {\n\n\t\t\tconst c1 = cs[ a ];\n\t\t\tconst c2 = cs[ b ];\n\t\t\tconst c3 = cs[ c ];\n\n\t\t\tcolors2.push( c1.x, c1.y, c1.z );\n\t\t\tcolors2.push( c2.x, c2.y, c2.z );\n\t\t\tcolors2.push( c3.x, c3.y, c3.z );\n\n\t\t}\n\n\t\tif ( hasUVs ) {\n\n\t\t\tconst u1 = us[ a ];\n\t\t\tconst u2 = us[ b ];\n\t\t\tconst u3 = us[ c ];\n\n\t\t\tuvs2.push( u1.x, u1.y );\n\t\t\tuvs2.push( u2.x, u2.y );\n\t\t\tuvs2.push( u3.x, u3.y );\n\n\t\t}\n\n\t\tif ( hasUV2s ) {\n\n\t\t\tconst u21 = u2s[ a ];\n\t\t\tconst u22 = u2s[ b ];\n\t\t\tconst u23 = u2s[ c ];\n\n\t\t\tuv2s2.push( u21.x, u21.y );\n\t\t\tuv2s2.push( u22.x, u22.y );\n\t\t\tuv2s2.push( u23.x, u23.y );\n\n\t\t}\n\n\t}\n\n\twhile ( tessellating && iteration < maxIterations ) {\n\n\t\titeration ++;\n\t\ttessellating = false;\n\n\t\tpositions = positions2;\n\t\tpositions2 = [];\n\n\t\tif ( hasNormals ) {\n\n\t\t\tnormals = normals2;\n\t\t\tnormals2 = [];\n\n\t\t}\n\n\t\tif ( hasColors ) {\n\n\t\t\tcolors = colors2;\n\t\t\tcolors2 = [];\n\n\t\t}\n\n\t\tif ( hasUVs ) {\n\n\t\t\tuvs = uvs2;\n\t\t\tuvs2 = [];\n\n\t\t}\n\n\t\tif ( hasUV2s ) {\n\n\t\t\tuv2s = uv2s2;\n\t\t\tuv2s2 = [];\n\n\t\t}\n\n\t\tfor ( var i = 0, i2 = 0, il = positions.length; i < il; i += 9, i2 += 6 ) {\n\n\t\t\tva.fromArray( positions, i + 0 );\n\t\t\tvb.fromArray( positions, i + 3 );\n\t\t\tvc.fromArray( positions, i + 6 );\n\n\t\t\tif ( hasNormals ) {\n\n\t\t\t\tna.fromArray( normals, i + 0 );\n\t\t\t\tnb.fromArray( normals, i + 3 );\n\t\t\t\tnc.fromArray( normals, i + 6 );\n\n\t\t\t}\n\n\t\t\tif ( hasColors ) {\n\n\t\t\t\tca.fromArray( colors, i + 0 );\n\t\t\t\tcb.fromArray( colors, i + 3 );\n\t\t\t\tcc.fromArray( colors, i + 6 );\n\n\t\t\t}\n\n\t\t\tif ( hasUVs ) {\n\n\t\t\t\tua.fromArray( uvs, i2 + 0 );\n\t\t\t\tub.fromArray( uvs, i2 + 2 );\n\t\t\t\tuc.fromArray( uvs, i2 + 4 );\n\n\t\t\t}\n\n\t\t\tif ( hasUV2s ) {\n\n\t\t\t\tu2a.fromArray( uv2s, i2 + 0 );\n\t\t\t\tu2b.fromArray( uv2s, i2 + 2 );\n\t\t\t\tu2c.fromArray( uv2s, i2 + 4 );\n\n\t\t\t}\n\n\t\t\tconst dab = va.distanceToSquared( vb );\n\t\t\tconst dbc = vb.distanceToSquared( vc );\n\t\t\tconst dac = va.distanceToSquared( vc );\n\n\t\t\tif ( dab > maxEdgeLengthSquared || dbc > maxEdgeLengthSquared || dac > maxEdgeLengthSquared ) {\n\n\t\t\t\ttessellating = true;\n\n\t\t\t\tif ( dab >= dbc && dab >= dac ) {\n\n\t\t\t\t\tvm.lerpVectors( va, vb, 0.5 );\n\t\t\t\t\tif ( hasNormals ) nm.lerpVectors( na, nb, 0.5 );\n\t\t\t\t\tif ( hasColors ) cm.lerpColors( ca, cb, 0.5 );\n\t\t\t\t\tif ( hasUVs ) um.lerpVectors( ua, ub, 0.5 );\n\t\t\t\t\tif ( hasUV2s ) u2m.lerpVectors( u2a, u2b, 0.5 );\n\n\t\t\t\t\taddTriangle( 0, 3, 2 );\n\t\t\t\t\taddTriangle( 3, 1, 2 );\n\n\t\t\t\t} else if ( dbc >= dab && dbc >= dac ) {\n\n\t\t\t\t\tvm.lerpVectors( vb, vc, 0.5 );\n\t\t\t\t\tif ( hasNormals ) nm.lerpVectors( nb, nc, 0.5 );\n\t\t\t\t\tif ( hasColors ) cm.lerpColors( cb, cc, 0.5 );\n\t\t\t\t\tif ( hasUVs ) um.lerpVectors( ub, uc, 0.5 );\n\t\t\t\t\tif ( hasUV2s ) u2m.lerpVectors( u2b, u2c, 0.5 );\n\n\t\t\t\t\taddTriangle( 0, 1, 3 );\n\t\t\t\t\taddTriangle( 3, 2, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvm.lerpVectors( va, vc, 0.5 );\n\t\t\t\t\tif ( hasNormals ) nm.lerpVectors( na, nc, 0.5 );\n\t\t\t\t\tif ( hasColors ) cm.lerpColors( ca, cc, 0.5 );\n\t\t\t\t\tif ( hasUVs ) um.lerpVectors( ua, uc, 0.5 );\n\t\t\t\t\tif ( hasUV2s ) u2m.lerpVectors( u2a, u2c, 0.5 );\n\n\t\t\t\t\taddTriangle( 0, 1, 3 );\n\t\t\t\t\taddTriangle( 3, 1, 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\taddTriangle( 0, 1, 2 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst geometry2 = new BufferGeometry();\n\n\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\n\tif ( hasNormals ) {\n\n\t\tgeometry2.setAttribute( 'normal', new Float32BufferAttribute( normals2, 3 ) );\n\n\t}\n\n\tif ( hasColors ) {\n\n\t\tgeometry2.setAttribute( 'color', new Float32BufferAttribute( colors2, 3 ) );\n\n\t}\n\n\tif ( hasUVs ) {\n\n\t\tgeometry2.setAttribute( 'uv', new Float32BufferAttribute( uvs2, 2 ) );\n\n\t}\n\n\tif ( hasUV2s ) {\n\n\t\tgeometry2.setAttribute( 'uv2', new Float32BufferAttribute( uv2s2, 2 ) );\n\n\t}\n\n\treturn geometry2;\n\n};\n\nexport { TessellateModifier };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}