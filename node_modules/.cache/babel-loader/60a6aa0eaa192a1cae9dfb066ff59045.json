{"ast":null,"code":"import _slicedToArray from \"C:/Users/User/Downloads/lwmpi_new/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useRef, useState, useCallback, useMemo, createElement } from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, LinearFilter, RGBFormat, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport { extend, useThree, useFrame } from 'react-three-fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { BlurPass } from '../materials/BlurPass.js';\nimport { MeshReflectorMaterial } from '../materials/MeshReflectorMaterial.js';\nextend({\n  MeshReflectorMaterial: MeshReflectorMaterial\n});\nvar Reflector = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$mixBlur = _ref.mixBlur,\n      mixBlur = _ref$mixBlur === void 0 ? 0.0 : _ref$mixBlur,\n      _ref$mixStrength = _ref.mixStrength,\n      mixStrength = _ref$mixStrength === void 0 ? 0.5 : _ref$mixStrength,\n      _ref$resolution = _ref.resolution,\n      resolution = _ref$resolution === void 0 ? 256 : _ref$resolution,\n      _ref$blur = _ref.blur,\n      blur = _ref$blur === void 0 ? [0, 0] : _ref$blur,\n      _ref$args = _ref.args,\n      args = _ref$args === void 0 ? [1, 1] : _ref$args,\n      _ref$minDepthThreshol = _ref.minDepthThreshold,\n      minDepthThreshold = _ref$minDepthThreshol === void 0 ? 0.9 : _ref$minDepthThreshol,\n      _ref$maxDepthThreshol = _ref.maxDepthThreshold,\n      maxDepthThreshold = _ref$maxDepthThreshol === void 0 ? 1 : _ref$maxDepthThreshol,\n      _ref$depthScale = _ref.depthScale,\n      depthScale = _ref$depthScale === void 0 ? 0 : _ref$depthScale,\n      _ref$depthToBlurRatio = _ref.depthToBlurRatioBias,\n      depthToBlurRatioBias = _ref$depthToBlurRatio === void 0 ? 0.25 : _ref$depthToBlurRatio,\n      mirror = _ref.mirror,\n      children = _ref.children,\n      _ref$debug = _ref.debug,\n      debug = _ref$debug === void 0 ? 0 : _ref$debug,\n      _ref$distortion = _ref.distortion,\n      distortion = _ref$distortion === void 0 ? 1 : _ref$distortion,\n      distortionMap = _ref.distortionMap,\n      props = _objectWithoutPropertiesLoose(_ref, [\"mixBlur\", \"mixStrength\", \"resolution\", \"blur\", \"args\", \"minDepthThreshold\", \"maxDepthThreshold\", \"depthScale\", \"depthToBlurRatioBias\", \"mirror\", \"children\", \"debug\", \"distortion\", \"distortionMap\"]);\n\n  blur = Array.isArray(blur) ? blur : [blur, blur];\n  var hasBlur = blur[0] + blur[1] > 0;\n  var meshRef = useRef(null);\n\n  var _useState = useState(function () {\n    return new Plane();\n  }),\n      _useState2 = _slicedToArray(_useState, 1),\n      reflectorPlane = _useState2[0];\n\n  var _useState3 = useState(function () {\n    return new Vector3();\n  }),\n      _useState4 = _slicedToArray(_useState3, 1),\n      normal = _useState4[0];\n\n  var _useState5 = useState(function () {\n    return new Vector3();\n  }),\n      _useState6 = _slicedToArray(_useState5, 1),\n      reflectorWorldPosition = _useState6[0];\n\n  var _useState7 = useState(function () {\n    return new Vector3();\n  }),\n      _useState8 = _slicedToArray(_useState7, 1),\n      cameraWorldPosition = _useState8[0];\n\n  var _useState9 = useState(function () {\n    return new Matrix4();\n  }),\n      _useState10 = _slicedToArray(_useState9, 1),\n      rotationMatrix = _useState10[0];\n\n  var _useState11 = useState(function () {\n    return new Vector3(0, 0, -1);\n  }),\n      _useState12 = _slicedToArray(_useState11, 1),\n      lookAtPosition = _useState12[0];\n\n  var _useState13 = useState(function () {\n    return new Vector4();\n  }),\n      _useState14 = _slicedToArray(_useState13, 1),\n      clipPlane = _useState14[0];\n\n  var _useState15 = useState(function () {\n    return new Vector3();\n  }),\n      _useState16 = _slicedToArray(_useState15, 1),\n      view = _useState16[0];\n\n  var _useState17 = useState(function () {\n    return new Vector3();\n  }),\n      _useState18 = _slicedToArray(_useState17, 1),\n      target = _useState18[0];\n\n  var _useState19 = useState(function () {\n    return new Vector4();\n  }),\n      _useState20 = _slicedToArray(_useState19, 1),\n      q = _useState20[0];\n\n  var _useState21 = useState(function () {\n    return new Matrix4();\n  }),\n      _useState22 = _slicedToArray(_useState21, 1),\n      textureMatrix = _useState22[0];\n\n  var _useState23 = useState(function () {\n    return new PerspectiveCamera();\n  }),\n      _useState24 = _slicedToArray(_useState23, 1),\n      virtualCamera = _useState24[0];\n\n  var _useThree = useThree(),\n      gl = _useThree.gl,\n      scene = _useThree.scene,\n      camera = _useThree.camera;\n\n  var beforeRender = useCallback(function () {\n    reflectorWorldPosition.setFromMatrixPosition(meshRef.current.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(meshRef.current.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition); // Avoid rendering when reflector is facing away\n\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix); // Update the texture matrix\n\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(meshRef.current.matrixWorld); // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    var projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14]; // Calculate the scaled plane vector\n\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q)); // Replacing the third row of the projection matrix\n\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  var _useMemo = useMemo(function () {\n    var parameters = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBFormat,\n      encoding: gl.outputEncoding\n    };\n    var fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n    fbo1.depthBuffer = true;\n    fbo1.depthTexture = new DepthTexture(resolution, resolution);\n    fbo1.depthTexture.format = DepthFormat;\n    fbo1.depthTexture.type = UnsignedShortType;\n    var fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\n    var blurpass = new BlurPass({\n      gl: gl,\n      resolution: resolution,\n      width: blur[0],\n      height: blur[1],\n      minDepthThreshold: minDepthThreshold,\n      maxDepthThreshold: maxDepthThreshold,\n      depthScale: depthScale,\n      depthToBlurRatioBias: depthToBlurRatioBias\n    });\n    var reflectorProps = {\n      mirror: mirror,\n      textureMatrix: textureMatrix,\n      mixBlur: mixBlur,\n      tDiffuse: fbo1.texture,\n      tDepth: fbo1.depthTexture,\n      tDiffuseBlur: fbo2.texture,\n      hasBlur: hasBlur,\n      mixStrength: mixStrength,\n      minDepthThreshold: minDepthThreshold,\n      maxDepthThreshold: maxDepthThreshold,\n      depthScale: depthScale,\n      depthToBlurRatioBias: depthToBlurRatioBias,\n      transparent: true,\n      debug: debug,\n      distortion: distortion,\n      distortionMap: distortionMap,\n      'defines-USE_BLUR': hasBlur ? '' : undefined,\n      'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\n      'defines-USE_DISTORTION': !!distortionMap ? '' : undefined\n    };\n    return [fbo1, fbo2, blurpass, reflectorProps];\n  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, debug, distortion, distortionMap]),\n      _useMemo2 = _slicedToArray(_useMemo, 4),\n      fbo1 = _useMemo2[0],\n      fbo2 = _useMemo2[1],\n      blurpass = _useMemo2[2],\n      reflectorProps = _useMemo2[3];\n\n  useFrame(function () {\n    if (!(meshRef == null ? void 0 : meshRef.current)) return;\n    meshRef.current.visible = false;\n    beforeRender();\n    gl.setRenderTarget(fbo1);\n    gl.render(scene, virtualCamera);\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\n    meshRef.current.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/createElement(\"mesh\", _extends({\n    ref: mergeRefs([meshRef, ref])\n  }, props), /*#__PURE__*/createElement(\"planeBufferGeometry\", {\n    args: args\n  }), children ? children('meshReflectorMaterial', reflectorProps) : /*#__PURE__*/createElement(\"meshReflectorMaterial\", reflectorProps));\n});\nexport { Reflector };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","forwardRef","useRef","useState","useCallback","useMemo","createElement","Plane","Vector3","Matrix4","Vector4","PerspectiveCamera","LinearFilter","RGBFormat","WebGLRenderTarget","DepthTexture","DepthFormat","UnsignedShortType","extend","useThree","useFrame","mergeRefs","BlurPass","MeshReflectorMaterial","Reflector","_ref","ref","mixBlur","mixStrength","resolution","blur","args","minDepthThreshold","maxDepthThreshold","depthScale","depthToBlurRatioBias","mirror","children","debug","distortion","distortionMap","props","Array","isArray","hasBlur","meshRef","reflectorPlane","normal","reflectorWorldPosition","cameraWorldPosition","rotationMatrix","lookAtPosition","clipPlane","view","target","q","textureMatrix","virtualCamera","gl","scene","camera","beforeRender","setFromMatrixPosition","current","matrixWorld","extractRotation","set","applyMatrix4","subVectors","dot","reflect","negate","add","position","copy","up","lookAt","far","updateMatrixWorld","projectionMatrix","multiply","matrixWorldInverse","setFromNormalAndCoplanarPoint","x","y","z","constant","Math","sign","elements","w","multiplyScalar","parameters","minFilter","magFilter","format","encoding","outputEncoding","fbo1","depthBuffer","depthTexture","type","fbo2","blurpass","width","height","reflectorProps","tDiffuse","texture","tDepth","tDiffuseBlur","transparent","undefined","visible","setRenderTarget","render"],"sources":["C:/Users/User/Downloads/lwmpi_new/node_modules/@react-three/drei/core/Reflector.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useRef, useState, useCallback, useMemo, createElement } from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, LinearFilter, RGBFormat, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport { extend, useThree, useFrame } from 'react-three-fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { BlurPass } from '../materials/BlurPass.js';\nimport { MeshReflectorMaterial } from '../materials/MeshReflectorMaterial.js';\n\nextend({\n  MeshReflectorMaterial\n});\nconst Reflector = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    mixBlur = 0.0,\n    mixStrength = 0.5,\n    resolution = 256,\n    blur = [0, 0],\n    args = [1, 1],\n    minDepthThreshold = 0.9,\n    maxDepthThreshold = 1,\n    depthScale = 0,\n    depthToBlurRatioBias = 0.25,\n    mirror,\n    children,\n    debug = 0,\n    distortion = 1,\n    distortionMap\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"mixBlur\", \"mixStrength\", \"resolution\", \"blur\", \"args\", \"minDepthThreshold\", \"maxDepthThreshold\", \"depthScale\", \"depthToBlurRatioBias\", \"mirror\", \"children\", \"debug\", \"distortion\", \"distortionMap\"]);\n\n  blur = Array.isArray(blur) ? blur : [blur, blur];\n  const hasBlur = blur[0] + blur[1] > 0;\n  const meshRef = useRef(null);\n  const [reflectorPlane] = useState(() => new Plane());\n  const [normal] = useState(() => new Vector3());\n  const [reflectorWorldPosition] = useState(() => new Vector3());\n  const [cameraWorldPosition] = useState(() => new Vector3());\n  const [rotationMatrix] = useState(() => new Matrix4());\n  const [lookAtPosition] = useState(() => new Vector3(0, 0, -1));\n  const [clipPlane] = useState(() => new Vector4());\n  const [view] = useState(() => new Vector3());\n  const [target] = useState(() => new Vector3());\n  const [q] = useState(() => new Vector4());\n  const [textureMatrix] = useState(() => new Matrix4());\n  const [virtualCamera] = useState(() => new PerspectiveCamera());\n  const {\n    gl,\n    scene,\n    camera\n  } = useThree();\n  const beforeRender = useCallback(() => {\n    reflectorWorldPosition.setFromMatrixPosition(meshRef.current.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(meshRef.current.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition); // Avoid rendering when reflector is facing away\n\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix); // Update the texture matrix\n\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(meshRef.current.matrixWorld); // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    const projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14]; // Calculate the scaled plane vector\n\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q)); // Replacing the third row of the projection matrix\n\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const [fbo1, fbo2, blurpass, reflectorProps] = useMemo(() => {\n    const parameters = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBFormat,\n      encoding: gl.outputEncoding\n    };\n    const fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n    fbo1.depthBuffer = true;\n    fbo1.depthTexture = new DepthTexture(resolution, resolution);\n    fbo1.depthTexture.format = DepthFormat;\n    fbo1.depthTexture.type = UnsignedShortType;\n    const fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\n    const blurpass = new BlurPass({\n      gl,\n      resolution,\n      width: blur[0],\n      height: blur[1],\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias\n    });\n    const reflectorProps = {\n      mirror,\n      textureMatrix,\n      mixBlur,\n      tDiffuse: fbo1.texture,\n      tDepth: fbo1.depthTexture,\n      tDiffuseBlur: fbo2.texture,\n      hasBlur,\n      mixStrength,\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias,\n      transparent: true,\n      debug,\n      distortion,\n      distortionMap,\n      'defines-USE_BLUR': hasBlur ? '' : undefined,\n      'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\n      'defines-USE_DISTORTION': !!distortionMap ? '' : undefined\n    };\n    return [fbo1, fbo2, blurpass, reflectorProps];\n  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, debug, distortion, distortionMap]);\n  useFrame(() => {\n    if (!(meshRef == null ? void 0 : meshRef.current)) return;\n    meshRef.current.visible = false;\n    beforeRender();\n    gl.setRenderTarget(fbo1);\n    gl.render(scene, virtualCamera);\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\n    meshRef.current.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/createElement(\"mesh\", _extends({\n    ref: mergeRefs([meshRef, ref])\n  }, props), /*#__PURE__*/createElement(\"planeBufferGeometry\", {\n    args: args\n  }), children ? children('meshReflectorMaterial', reflectorProps) : /*#__PURE__*/createElement(\"meshReflectorMaterial\", reflectorProps));\n});\n\nexport { Reflector };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}